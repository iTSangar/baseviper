//
//  HomePresenter.swift
//  JLViperBase
//
//  Created by Jhoney Lopes on 25/06/18.
//  Copyright (c) 2018 Jhoney Lopes. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class HomePresenter {
  
  // MARK: - Private properties
  private weak var view: HomeViewInterface?
  private let interactor: JLViperBaseApiInteractorProtocol
  private let wireframe: HomeWireframeInterface
  private var maps: JLViperBaseApiModel?
  
  // MARK: - Lifecycle
  init(wireframe: HomeWireframeInterface,
       view: HomeViewInterface,
       interactor: JLViperBaseApiInteractorProtocol) {
    self.wireframe = wireframe
    self.view = view
    self.interactor = interactor
  }
  
  // MARK: - Class Methods
  func viewDidLoad() {
    
  }
  
  func getNumOfAddresses() -> Int {
    if let maps = maps {
      return maps.numOfAddresses()
    }
    return 0
  }
  
  func updateMap(with response: JLViperBaseApiModel? = nil) {
    self.maps = response
    self.view?.reloadData()
  }
}

// MARK: - Extensions
extension HomePresenter: HomePresenterInterface {
  
  func callSearch(_ address: String) {
    updateMap()
    interactor.getSome(address, HomeConfig.sensor)
  }
  
  func numberOfSections(in tableView: UITableView) -> Int {
    return getNumOfAddresses() > 1 ? 2 : 1
  }
  
  func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
    if getNumOfAddresses() > 1 {
      if section == 0 {
        return 1
      } else {
       return getNumOfAddresses()
      }
    } else {
      return getNumOfAddresses()
    }
  }
  
  func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
    guard let cell = tableView.dequeueReusableCell(withIdentifier: HomeConfig.identifier, for: indexPath) as? homeCell else {
      return UITableViewCell()
    }
    
    if indexPath.section == 0 && getNumOfAddresses() > 1 {
      cell.lblTitle.text = HomeConfig.cellText
    } else {
      if let maps = maps {
        let model = maps.getAddress(for: indexPath.row)
        cell.lblTitle.text = model.getAddressName()
      }
    }
    return cell
  }
  
  func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
    guard let map = maps else { return }
    if indexPath.section == 0 && getNumOfAddresses() > 1 {
      if indexPath.row == 0 {
        print(map.getAddresses())
        return
      }
    }
    print([map.getAddress(for: indexPath.row)])
  }
}

extension HomePresenter: JLViperBaseApiInteractorResponseProtocol {
  func responsegetSomeSuccess(_ response: JLViperBaseApiModel) {
    if response.getAddresses().count > 0 {
      updateMap(with: response)
    } else {
      self.wireframe.navigate(to: .noResults)
    }
  }
  
  func responsegetSomeError() {
    wireframe.navigate(to: .error)
  }
}

// MARK: - Enum Config
enum HomeConfig {
  static let identifier = "homeCell"
  static let cellText = "Display All on Map"
  static let sensor = "false"
}
